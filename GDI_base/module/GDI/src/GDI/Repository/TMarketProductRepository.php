<?php

namespace GDI\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;
/**
 * TMarketProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TMarketProductRepository extends \Doctrine\ORM\EntityRepository
{
    public function getSample()
    {
        $repository = $this->getEntityManager()
            ->getRepository('GDI\Entity\TMarketProduct');

        $query = $repository->createQueryBuilder('mp');
        //$query
            //->where('mp.price > 0')
            //->setParameter('price', '19.99')
            //->orderBy('p.price', 'ASC')
            //->from('GDI\Entity\TMarketProduct', 'mp');
            //->leftjoin('d.otherEntity', 'o');

        $query->setMaxResults(10);
        $results = $query->getQuery()->getResult();
    }

    //working
    public function getSimple($offset = 0, $limit = 10)
    {
        $query = $this->_em->createQueryBuilder()
            ->select(array('p','m'))
            ->from('\GDI\Entity\TMarketProduct', 'm')
            ->leftJoin('m.product', 'p')
            ->orderBy('m.createTime', 'DESC')
            ->setMaxResults($limit)
            ->setFirstResult($offset)
            //->where('u.marketProductId > 0')
            
            ->getQuery();
        
        $paginator = new Paginator( $query );
        
        return $paginator;
        //return $query->getResult();
    }

    /**
     * @param  $params
     * @return [type]
     */
    public function filterMarketProduct($params=array())
    {
        //var_dump($params);

        $title = isset($params['title']) && trim($params['title']) !== '' ? $params['title'] : '';
        $platform = isset($params['platform']) && trim($params['platform']) !== '' ? $params['platform'] : null;
        $category = isset($params['category']) && trim($params['category']) !== '' ? $params['category'] : null;
        $market = isset($params['market']) && trim($params['market']) !== '' ? $params['market'] : null;
        $status = isset($params['status']) && trim($params['status']) !== '' ? $params['status'] : null;
        $branch = isset($params['branch']) && trim($params['branch']) !== '' ? $params['branch'] : null;
        $controlno = isset($params['controlno']) && trim($params['controlno']) !== '' ? $params['controlno'] : null;

        //submission
        $eSubmissionDate = isset($params['eSubmissionDate']) && trim($params['eSubmissionDate']) !== '' ? $params['eSubmissionDate'] : null; //checkbox
        $rSubmissionDate = isset($params['rSubmissionDate']) && trim($params['rSubmissionDate']) !== '' ? $params['rSubmissionDate'] : null; //checkbox
        $submissionDate = isset($params['submissionDate']) && trim($params['submissionDate']) !== '' ? $params['submissionDate'] : null; //date txtbox
        //approval
        $eApprovalDate = isset($params['eApprovalDate']) && trim($params['eApprovalDate']) !== '' ? $params['eApprovalDate'] : null; //checkbox
        $rApprovalDate = isset($params['rApprovalDate']) && trim($params['rApprovalDate']) !== '' ? $params['rApprovalDate'] : null; //checkbox
        $approvalDate = isset($params['approvalDate']) && trim($params['approvalDate']) !== '' ? $params['approvalDate'] : null; //date txtbox
         //release
        $eReleaseDate = isset($params['eReleaseDate']) && trim($params['eReleaseDate']) !== '' ? $params['eReleaseDate'] : null; //checkbox
        $rReleaseDate = isset($params['rReleaseDate']) && trim($params['rReleaseDate']) !== '' ? $params['rReleaseDate'] : null; //checkbox
        $releaseDate = isset($params['releaseDate']) && trim($params['releaseDate']) !== '' ? $params['releaseDate'] : null; //date txtbox
         //launch
        $eLaunchDate = isset($params['eLaunchDate']) && trim($params['eLaunchDate']) !== '' ? $params['eLaunchDate'] : null; //checkbox
        $rLaunchDate = isset($params['rLaunchDate']) && trim($params['rLaunchDate']) !== '' ? $params['rLaunchDate'] : null; //checkbox
        $launchDate = isset($params['launchDate']) && trim($params['launchDate']) !== '' ? $params['launchDate'] : null; //date txtbox
        
        $query = $this->_em->createQueryBuilder();

        $select = array('p','mp','m');
        $sql = $query
            ->select($select)
            ->from('\GDI\Entity\TMarketProduct', 'mp')
            ->join('mp.market', 'm')
            ->join('mp.product', 'p')
            ;
            
        
        if (!is_null($submissionDate) || !is_null($approvalDate) || !is_null($releaseDate) || !is_null($launchDate) || !is_null($status)) {
            $select[] = 'jp';
            $query
                ->select($select)
                ->join('mp.jurisdictionProduct', 'jp');
        }

        //title 
        //if (!is_null($title)) {
            $query->where('mp.title like :title')
                ->setParameter('title',"%{$title}%");
        //}
        
        //platform
        if (!is_null($platform)) {
            $query->andWhere('mp.platformId = :platformId')
                ->setParameter('platformId', $platform);
        }
        //branch
        if (!is_null($branch)) {
            $query->andWhere('mp.branchId = :branchId')
                ->setParameter('branchId', $branch);
        }

        //category
        if (!is_null($category)) {
            $query->andWhere('mp.gameCategoryId = :gameCategoryId')
                ->setParameter('gameCategoryId',$category);
        }
        //market
        if (!is_null($market)) {
            $query->andWhere('mp.marketId = :marketId')
                ->setParameter('marketId', $market);
        }
        //control no
        if (!is_null($controlno)) {
            $query->andWhere('p.controlId like :controlno')
                ->setParameter('controlno', "%{$controlno}%");
        }
        //status
        if (!is_null($status)) {
            $query->andWhere('jp.statusId = :statusId')
                ->setParameter('statusId', $status);
        }

        //submission
        if (!is_null($submissionDate)) {

            $submissionDate_ex = explode(' - ', $submissionDate);
            $from_submissionDate = date('Y-m-d', strtotime($submissionDate_ex[0]));
            $to_submissionDate = date('Y-m-d', strtotime($submissionDate_ex[1]));

            $or_submission = $query->expr()->orx();
            
            if (!is_null($eSubmissionDate)) {
                $or_submission->add($query->expr()->between('jp.eSubmissionDate', ':efrom_submissionDate', ':eto_submissionDate'));
                    $query
                    ->setParameter('efrom_submissionDate', $from_submissionDate)
                    ->setParameter('eto_submissionDate', $to_submissionDate);
            }

            if (!is_null($rSubmissionDate)) {
                $or_submission->add($query->expr()->between('jp.rSubmissionDate', ':rfrom_submissionDate', ':rto_submissionDate'));
                $query
                    ->setParameter('rfrom_submissionDate', $from_submissionDate)
                    ->setParameter('rto_submissionDate', $to_submissionDate);
            }
            $query->andWhere($or_submission);
        }

        //master release
        if (!is_null($releaseDate)) {

            $releaseDate_ex = explode(' - ', $releaseDate);
            $from_releaseDate = date('Y-m-d', strtotime($releaseDate_ex[0]));
            $to_releaseDate = date('Y-m-d', strtotime($releaseDate_ex[1]));

            $or_release = $query->expr()->orx();

            if (!is_null($eReleaseDate)) {
                $or_release->add($query->expr()->between('jp.eReleaseDate', ":efrom_releaseDate", ":eto_releaseDate"));
                $query
                    ->setParameter('efrom_releaseDate', $from_releaseDate)
                    ->setParameter('eto_releaseDate', $to_releaseDate);
            }

            if (!is_null($rReleaseDate)) {
                $or_release->add($query->expr()->between('jp.rReleaseDate', ":rfrom_releaseDate", ":rto_releaseDate"));
                $query
                    ->setParameter('rfrom_releaseDate', $from_releaseDate)
                    ->setParameter('rto_releaseDate', $to_releaseDate);
            }
            $query->andWhere($or_release);
        }

        //approval
        if (!is_null($approvalDate)) {

            $approvalDate_ex = explode(' - ', $approvalDate);
            $from_approvalDate = date('Y-m-d', strtotime($approvalDate_ex[0]));
            $to_approvalDate = date('Y-m-d', strtotime($approvalDate_ex[1]));

            $or_approval = $query->expr()->orx();
            if (!is_null($eApprovalDate)) {
                $or_approval->add($query->expr()->between('jp.eApprovalDate', ":efrom_approvalDate", ":eto_approvalDate"));
                $query
                    ->setParameter('efrom_approvalDate', $from_approvalDate)
                    ->setParameter('eto_approvalDate', $to_approvalDate);
            }

            if (!is_null($rApprovalDate)) {
                $or_approval->add($query->expr()->between('jp.rApprovalDate', ":rfrom_approvalDate", ":rto_approvalDate"));
                $query
                    ->setParameter('rfrom_approvalDate', $from_approvalDate)
                    ->setParameter('rto_approvalDate', $to_approvalDate);
            }
            $query->andWhere($or_approval);
        }
        //launch
        if (!is_null($launchDate)) {

            $launchDate_ex = explode(' - ', $launchDate);
            $from_launchDate = date('Y-m-d', strtotime($launchDate_ex[0]));
            $to_launchDate = date('Y-m-d', strtotime($launchDate_ex[1]));

            $or_launch = $query->expr()->orx();

            if (!is_null($eLaunchDate)) {
                $or_launch->add($query->expr()->between('jp.eLaunchDate', ":efrom_launchDate", ":eto_launchDate"));
                $query
                    ->setParameter('efrom_launchDate', $from_launchDate)
                    ->setParameter('eto_launchDate', $to_launchDate);
            }

            if (!is_null($rLaunchDate)) {
                $or_launch->add($query->expr()->between('jp.rLaunchDate', ":rfrom_launchDate", ":rto_launchDate"));
                $query
                    ->setParameter('rfrom_launchDate', $from_launchDate)
                    ->setParameter('rto_launchDate', $to_launchDate);
            }
            $query->andWhere($or_launch);
        }

        $query
            ->orderBy('mp.createTime', 'DESC')
            ->setMaxResults($params['limit'])
            ->setFirstResult($params['offset']);


        $result = $sql->getQuery();
        
       /* print($result->getSql());
        print($result->getParameters());
        exit;*/

        
        $paginator = new Paginator( $result );
        
        return $paginator;
    }


    //working
    public function findTest()
    {
        $query = $this->_em->createQuery("SELECT mp FROM
         GDI\Entity\TMarketProduct mp");
        //$query->setParameters(array('userId' => $userId));
        return $query->getResult();
    }


    public function findUserComments($userId)
    {
        $query = $this->_em->createQuery("SELECT u FROM
        DoctrineTest\Entity\Comment u WHERE u.userId = :userId");
        $query->setParameters(array('userId' => $userId));
        return $query->getResult();
    }
}
